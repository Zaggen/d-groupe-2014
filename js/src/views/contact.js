// Generated by CoffeeScript 1.7.1
(function() {
  var Dgroupe, root,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  root = typeof window !== "undefined" && window !== null ? window : global;

  Dgroupe = root.Dgroupe;

  Dgroupe.Views.contact = (function(_super) {
    __extends(contact, _super);

    function contact() {
      this.contactHandler = __bind(this.contactHandler, this);
      this.getToken = __bind(this.getToken, this);
      return contact.__super__.constructor.apply(this, arguments);
    }

    contact.prototype.el = '#mainContact';

    contact.prototype.initialize = function(options) {
      this.$alert = $(this.$el.parent().find('.alert'));
      return this.formUrl = this.$el.attr('action');
    };

    contact.prototype.events = {
      'submit': 'contactHandler',
      'change input.name': 'getToken'
    };

    contact.prototype.getToken = function(e) {
      var val;
      if (this.formUrl !== '') {
        val = $(e.currentTarget).val();
        if (val !== '') {
          return $.get(this.formUrl, {
            'action': 'getToken',
            'tokenString': val
          }, (function(_this) {
            return function(response) {
              console.log(response.token);
              return _this.setTokenField(response.token);
            };
          })(this));
        }
      }
    };

    contact.prototype.setTokenField = function(token) {
      var $tokenInput;
      console.log('setting token to ' + token);
      $tokenInput = $(this.$el.find('input[name="token"]'));
      $tokenInput.val(token);
      return this;
    };

    contact.prototype.contactHandler = function(e) {
      e.preventDefault();
      if (this.formUrl !== '') {
        return this.sendForm(this.$el.serialize());
      }
    };

    contact.prototype.sendForm = function(data) {
      return $.ajax({
        type: 'POST',
        url: this.formUrl,
        data: data,
        success: (function(_this) {
          return function(response) {
            _this.$el.before(_this.setMsgAlert(response));
            if (response.status === 'success') {
              _this.$el.addClass('setOpacityTenPercent');
              return _this.$el.find('#contactSubmit').remove();
            }
          };
        })(this),
        error: (function(_this) {
          return function() {
            var msgObj;
            msgObj = {
              status: 'failed',
              title: 'Error de conexi√≥n',
              description: 'Hubo un problema al intenta enviar tu mensaje, intentalo mas tarde'
            };
            return _this.$el.before(_this.setMsgAlert(msgObj));
          };
        })(this)
      });
    };

    contact.prototype.setMsgAlert = function(response) {
      var alertClass;
      console.log(response);
      alertClass = 'alert ' + (response.status === 'success' ? 'alertSuccess' : 'alertDanger');
      return this.$alert.removeClass().addClass(alertClass).html('<strong>' + response.title + '</strong> ' + response.description);
    };

    return contact;

  })(Backbone.View);

}).call(this);

//# sourceMappingURL=contact.map
