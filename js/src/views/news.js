// Generated by CoffeeScript 1.7.1
(function() {
  var Dgroupe, root,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  root = typeof window !== "undefined" && window !== null ? window : global;

  Dgroupe = root.Dgroupe;

  Dgroupe.Views.NewsCollection = (function(_super) {
    __extends(NewsCollection, _super);

    function NewsCollection() {
      return NewsCollection.__super__.constructor.apply(this, arguments);
    }

    NewsCollection.prototype.tagName = 'ul';

    NewsCollection.prototype.id = 'newsFeed';

    NewsCollection.prototype.className = 'feed';

    NewsCollection.prototype.render = function() {
      var $parent, nodes;
      $parent = $('#newsWrapper');
      $parent.empty();
      this.$el.empty();
      nodes = [];
      console.log(this.collection.toJSON());
      this.collection.each((function(_this) {
        return function(news) {
          var newsView;
          newsView = new Dgroupe.Views.News({
            model: news
          });
          newsView.delegateEvents();
          return nodes.push(newsView.render().el);
        };
      })(this));
      this.$el.append(nodes);
      $parent.append(this.el);
      return this;
    };

    return NewsCollection;

  })(Dgroupe.Views.ColectionView);

  Dgroupe.Views.News = (function(_super) {
    __extends(News, _super);

    function News() {
      this.showFullEntry = __bind(this.showFullEntry, this);
      return News.__super__.constructor.apply(this, arguments);
    }

    News.prototype.tagName = 'li';

    News.prototype.className = 'entry';

    News.prototype.events = {
      'click': 'showFullEntry'
    };

    News.prototype.showFullEntry = function(e) {
      var fullNews;
      e.preventDefault();
      e.stopPropagation();
      fullNews = new Dgroupe.Views.fullNews({
        model: this.model
      });
      return $('#newsWrapper').html(fullNews.render().el);
    };

    News.prototype.template = template('newsEntries');

    News.prototype.render = function() {
      this.$el.html(this.template(this.model.toJSON()));
      return this;
    };

    return News;

  })(Backbone.View);

  Dgroupe.Views.fullNews = (function(_super) {
    __extends(fullNews, _super);

    function fullNews() {
      return fullNews.__super__.constructor.apply(this, arguments);
    }

    fullNews.prototype.tagName = 'article';

    fullNews.prototype.className = 'fullEntry';

    fullNews.prototype.template = template('fullEntry');

    fullNews.prototype.render = function() {
      this.$el.html(this.template(this.model.toJSON()));
      App.backToListBtn.$el.removeClass('hidden');
      App.newsNavi.$el.addClass('hidden');
      return this;
    };

    return fullNews;

  })(Backbone.View);

}).call(this);

//# sourceMappingURL=news.map
